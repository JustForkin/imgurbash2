#!/bin/bash
#
#--------------------------------------------------------------------
# AUTHORS:  Modified by Ramon <https://github.com/ram-on/imgurbash2>
#           Originally written by Bart Nagel <bart@tremby.net>
# RELEASE:  2016-04-04
# LICENSE:  MIT
#--------------------------------------------------------------------
#
# REQUIRED: curl
# OPTIONAL: xsel or xclip for automatically putting the URLs on the X selection 
#           for easy pasting
#
# UPLOAD AN IMAGE:
#    bash imgurbash2 images/hilarious/moo.jpg
#
# UPLOAD MULTIPLE IMAGES:
#    bash imgurbash2 images/delicious/cake.png images/exciting/bungeejump.jpg
#
# The URLs will be outputted on your terminal. If you have xsel or xclip the
# URLs will also be put on the X selection, which you can usually paste with a CTRL-V.

# function to output usage instructions
function usage {
	echo "Usage: $(basename $0) <filename> [<filename> [...]]" >&2
	echo "Upload images to imgur and output their new URLs to stdout. Each one's" >&2
	echo "delete page is output to stderr between the view URLs." >&2
	echo "If xsel or xclip is available, the URLs are put on the X selection for" >&2
	echo "easy pasting." >&2
}

# check arguments
if [ "$1" = "-h" -o "$1" = "--help" ]; then
	usage
	exit 0
elif [ $# == 0 ]; then
	echo "No file specified" >&2
	usage
	exit 16
fi

# check curl is available
type curl >/dev/null 2>/dev/null || {
	echo "Couln't find curl, which is required." >&2
	exit 17
}

clip=""
errors=false
clientid='3e7a4deb7ac67da'

# loop through arguments
while [ $# -gt 0 ]; do
	file="$1"
	shift

	# check file exists
	if [ ! -f "$file" ]; then
		echo "file '$file' doesn't exist, skipping" >&2
		errors=true
		continue
	fi

	# upload the image
	response=$(curl -sH "Authorization: Client-ID $clientid" -F "image=@$file" "https://api.imgur.com/3/upload")
	#echo "$response"
	
	echo $response | grep -qo '"status":200' && url=$(echo $response | sed -e 's/.*"link":"\([^"]*\).*/\1/' -e 's/\\//g')
	
	if [ -z "$url" ]; then
		echo "Upload failed" >&2
		errors=true
		continue
	fi

	echo $url

	# append the URL to a string so we can put them all on the clipboard later
	clip="$clip$url
"
done

# put the URLs on the clipboard if we have xsel or xclip
if [ $DISPLAY ]; then
	{ type xsel >/dev/null 2>/dev/null && echo -n $clip | xsel --clipboard; } \
		|| { type xclip >/dev/null 2>/dev/null && echo -n $clip | xclip; } \
		|| echo "Haven't copied to the clipboard: no xsel or xclip" >&2
else
	echo "Haven't copied to the clipboard: no \$DISPLAY" >&2
fi

if $errors; then
	exit 1
fi
